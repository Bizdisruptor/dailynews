// Minimal Substack RSS â†’ JSON
function unescapeHtml(s=""){return s.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&");}

function parseRss(xml) {
  const items = [];
  // super-lightweight parsing for <item> blocks
  const itemRegex = /<item>([\s\S]*?)<\/item>/g;
  let m;
  while ((m = itemRegex.exec(xml))) {
    const b = m[1];
    const get = (tag) => {
      const rx = new RegExp(`<${tag}>([\\s\\S]*?)<\\/${tag}>`, "i");
      const mm = rx.exec(b);
      return mm ? unescapeHtml(mm[1].trim()) : "";
    };
    items.push({
      title: get("title"),
      url: get("link"),
      publishedAt: get("pubDate"),
      description: get("description")
    });
  }
  return items;
}

export async function handler(event) {
  try {
    const feed = event.queryStringParameters?.feed || "https://cerfreport.substack.com/feed";
    const r = await fetch(feed, { headers: { "User-Agent": "cerfreport-news/1.0" }});
    if (!r.ok) return { statusCode: r.status, body: await r.text() };

    const xml = await r.text();
    const articles = parseRss(xml).slice(0, 10);
    return {
      statusCode: 200,
      headers: { "Content-Type": "application/json", "Access-Control-Allow-Origin": "*" },
      body: JSON.stringify({ status: "ok", articles })
    };
  } catch (e) {
    return { statusCode: 500, body: JSON.stringify({ status: "error", message: e.message }) };
  }
}
